// 1.
#include <stdio.h>
#define MAX 200

void insertOrderedArray(float arr[], int *len, float insertVal){
    (*len)++;
    int i = (*len) - 2;
    while( arr[i] > insertVal){
        arr[i+1] = arr[i];
        i--;
    }
    arr[i+1] = insertVal;
}


int main()
{
    float arr[MAX];
    int len = 0;
    
    printf("Input array's len:\n");
    scanf("%d",&len);
    
    printf("Input array's elements:\n");
    for(int i = 0; i < len; i++){
        scanf("%f", &arr[i]);
    }
    
    float insertVal;
    printf("Input a value need to be inserted:\n");
    scanf("%f", &insertVal);
    
    insertOrderedArray(arr, &len, insertVal);
    
    printf("Your array after inserting:\n");
    for(int i = 0; i < len; i++){
        printf("%.2f ",arr[i]);
    }
    return 0;
}

//2 & 3.
#include <stdio.h>
#define MAX 200

int orderedLinearSearch(float arr[], int len, float val){
    for(int i = 0; i < len; i++){
        if(arr[i] == val){
            return i;
        }
        if(arr[i] > val){
            break;
        }
    }
    return -1;
}

int binarySearch(float arr[], int len, float val){
    int mid = 0;
    int left = 0;
    int right = len - 1;
    while(left < right){
        mid = (left + right)/2;
        if(arr[mid] > val){
            right = mid - 1;
        }
        if(arr[mid] < val){
            left = mid + 1;
        }
        else{
            return mid;
        }
    }
    return -1;
}

int main(){
    float arr[MAX];
    int len;
    float val;
    printf("Input your arr's len:\n");
    scanf("%d", &len);
    
    printf("Input your arr's elements:\n");
    for(int i = 0; i < len; i++){
        scanf("%f", &arr[i]);
    }
    
    printf("Input the val you need to find:\n");
    scanf("%f", &val);
    
    int index = orderedLinearSearch(arr, len, val);
    printf("Base on linear search: %d\n", index);
    
    index = binarySearch(arr, len, val);
    printf("Base on binary search: %d\n", index);
    
}